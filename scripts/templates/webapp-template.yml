# Simple Web Application Template
#
# Replace the following placeholders:
# - APPNAME: Your application name (lowercase, no spaces)
# - IMAGE: Docker image name
# - TAG: Docker image tag
# - PORT: Application port
# - 30XXX: NodePort (30000-32767 range)
#
# Usage:
# 1. Copy this file: cp manifests/templates/webapp-template.yml manifests/apps/APPNAME/
# 2. Replace placeholders with actual values
# 3. Deploy: kubectl apply -f manifests/apps/APPNAME/

---
apiVersion: v1
kind: Namespace
metadata:
  name: APPNAME
  labels:
    name: APPNAME
    type: application

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: APPNAME
  namespace: APPNAME
  labels:
    app: APPNAME
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: APPNAME
  template:
    metadata:
      labels:
        app: APPNAME
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "PORT"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: APPNAME
        image: IMAGE:TAG
        ports:
        - name: http
          containerPort: PORT
          protocol: TCP
        env:
        # Add your environment variables here
        - name: ENV_EXAMPLE
          value: "value"
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: APPNAME
  namespace: APPNAME
  labels:
    app: APPNAME
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "PORT"
spec:
  type: ClusterIP
  selector:
    app: APPNAME
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: APPNAME-nodeport
  namespace: APPNAME
  labels:
    app: APPNAME
spec:
  type: NodePort
  selector:
    app: APPNAME
  ports:
  - name: http
    port: 80
    targetPort: http
    nodePort: 30XXX
    protocol: TCP
